import Axios from "axios"
import Head from 'next/head'
import AuthLayout from "@/layouts/AuthLayout"
import {removeAttr, renameKeys} from "@/utils/jsonHelpers"
import {signUpInputs} from "@/constants/auth/signUpInputs"
import {dehydrate, QueryClient, useQuery} from "react-query"


const fetchLocationsBy = async type => {
  const BASE_URL = "https://ph-locations-api.buonzz.com/v1/"
  const {data: {data}} = await Axios.get(BASE_URL+type)
  return data
}

const SignUp = () => {
  const {data: regions} = useQuery("regions", () => fetchLocationsBy("regions"))
  console.log(regions)

  const submitHandler = data => {
    console.log("submitted data: ", data)
  }

  const linkTo = {
    href: "/login",
    text: "Already have an account?",
    linkText: "Sign in"
  }

  return (
    <main>
      <Head>
        <title>Create an Account</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <AuthLayout 
          linkTo={linkTo}
          submitValue="Join"
          inputList={signUpInputs}
          heading="Create an Account"
          submitHandler={submitHandler}
        />
    </main>
  )
}

export const getServerSideProps = async() => {
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery("regions", () => fetchLocationsBy("regions"))

  // // removes href attribute
  // removeAttr(regions, "href")
  //
  // // rename keys ex. id -> value
  // renameKeys(regions, [
  //   { oldKey: "id", newKey: "value" },
  //   { oldKey: "name", newKey: "label" },
  // ])

  return { props: { dehydrateState: dehydrate(queryClient)}}
}

export default SignUp
